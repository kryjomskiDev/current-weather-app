// Mocks generated by Mockito 5.0.17 from annotations
// in wheather_app/test/unit_tests/domain/weather/usecase/get_weather_by_city_name_use_case_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:wheather_app/domain/weather/model/weather.dart' as _i2;
import 'package:wheather_app/domain/weather/service/weather_service.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeWeather_0 extends _i1.Fake implements _i2.Weather {}

/// A class which mocks [WeatherService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherService extends _i1.Mock implements _i3.WeatherService {
  MockWeatherService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Weather> getWeatherByCords(double? lat, double? lon) =>
      (super.noSuchMethod(Invocation.method(#getWeatherByCords, [lat, lon]),
              returnValue: Future<_i2.Weather>.value(_FakeWeather_0()))
          as _i4.Future<_i2.Weather>);
  @override
  _i4.Future<_i2.Weather> getWeatherByCityName(String? cityName) =>
      (super.noSuchMethod(Invocation.method(#getWeatherByCityName, [cityName]),
              returnValue: Future<_i2.Weather>.value(_FakeWeather_0()))
          as _i4.Future<_i2.Weather>);
}
